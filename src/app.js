import express from 'express';
import React from 'react';
import { renderToString } from 'react-dom/server';
import { ServerStyleSheet } from 'styled-components';
import App from './client/App';
import Html from './client/Html';

const app = express();

/**
 * @api {get} / A simple server-side rendering for a React web app
 * @apiVersion 2.0.0
 * @apiName Root
 * @apiGroup Server
 *
 * @apiSuccess {String} response React web app post-processed
 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *        Html
 *     }
 *
*/
app.get('/', (req, res) => {
  const sheet = new ServerStyleSheet();
  const styles = sheet.getStyleTags();
  const body = renderToString(<App />);
  const title = 'CIAM - Schema validator';
  const result = Html({ body, styles, title });
  console.log(result);
  res.status(200).send(result);
});

/**
 * @api {get} /validate Request schema validation
 * @apiVersion 2.0.0
 * @apiName Validate
 * @apiGroup Server
 *
 * @apiParam {String} file file name to validate located in the 'schemas' folder
 *
 * @apiSuccess {String} response JSON object as response generated by AJV
 *
 * @apiExample {js} Example usage:
            http://localhost:3000/validate?file=Sogec1.json

 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *        AJV response
 *     }
*/
app.get('/validate', (req, res) => {
  let localFile = require('./data/Sogec1.json');
  if (req.query.file) {
    localFile = require(`./data/${req.query.file}`);
  }
  const winston = require('winston');
  const Ajv = require('ajv');

  const ajv = Ajv({
    allErrors: true,
    logger: winston,
    verbose: false,
    validateSchema: 'log',
    schemas: [
      require('./schemas/importschema'),
      require('./schemas/definitions'),
      require('./schemas/accountImport'),
      require('./schemas/profile'),
      require('./schemas/data'),
      require('./schemas/identities'),
      require('./schemas/loginIDs'),
      require('./schemas/password'),
      require('./schemas/subscriptions'),
      require('./schemas/child'),
      require('./schemas/pet'),
      require('./schemas/interest'),
      require('./schemas/externalIdentity'),
    ],
  });

  const validate = ajv.getSchema('http://ciam.nestle.com/schemas/importschema.json#');
  const valid = validate(localFile);

  winston.warn(validate.errors);
  winston.info(valid);
  const result = validate.errors;
  res.status(200).send(result);
});

/**
 * @api {get} /schemalist List schemas available
 * @apiVersion 2.0.0
 * @apiName SchemaList
 * @apiGroup Server
 *
 *
 * @apiSuccess {String} List of schema objects available
 *
 * @apiExample {js} Example usage:
            http://localhost:3000/schemaList

 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *        schemas
 *     }
*/
app.get('/schemalist', (req, res) => {
  const fs = require('fs');
  const testFolder = './src/schemas/';
  fs.readdir(testFolder, (err, files) => {
    res.status(200).send(files);
  });
});

/**
 * @api {get} /datalist List the available JSON schemas to validate
 * @apiVersion 2.0.0
 * @apiName DataList
 * @apiGroup Server
 *
 *
 * @apiSuccess {String} List of JSON objects available to validate
 *
 * @apiExample {js} Example usage:
            http://localhost:3000/dataList

 * @apiSuccessExample Success-Response:
 *     HTTP/1.1 200 OK
 *     {
 *        schemas
 *     }
*/
app.get('/dataList', (req, res) => {
  const fs = require('fs');
  const testFolder = './src/data/';
  fs.readdir(testFolder, (err, files) => {
    res.status(200).send(files);
  });
});

module.exports = app;
