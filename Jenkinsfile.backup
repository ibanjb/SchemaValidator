node('default') {

    def GIT_COMMIT
    def GIT_MSG
    def BUILD_ID

    try {

        notifyBuild('STARTED')

        stage('Checkout') {

          checkout scm
          GIT_COMMIT = sh(returnStdout: true, script: 'git rev-parse HEAD').trim().take(6)
          // If last commit msg start with: [pushimage]
          GIT_MSG = sh(returnStdout: true, script: 'git log --format=%B -n 1 HEAD').trim().take(11)
          BUILD_ID = "${env.BRANCH_NAME}${GIT_COMMIT}".toLowerCase().replace('-', '')
        }        

        stage('Test') {

          parallel(
            "Unit": {

                sh("docker exec onnode-${BUILD_ID} yarn test")
            },
            "ESDoc": {

                sh("docker exec onnode-${BUILD_ID} yarn run docs")
            }
          )
        }

        bitbucketStatusNotify buildState: "SUCCESS"

        currentBuild.result = "SUCCESS"
        notifyBuild('SUCCESS')

        if ( env.BRANCH_NAME ==~ /develop/ || env.BRANCH_NAME ==~ /master/  || GIT_MSG == '[pushimage]' ) {

        switch(env.BRANCH_NAME) {
          case "master":
            environment = "staging"
            namespace = "default"
            break
          default:
            environment = "dev"
            namespace = "dev"
            break
        }

          notifyBuild('DEPLOYMENT')
          
        }

    } catch (Exception e) {

        bitbucketStatusNotify buildState: "FAILURE"

        currentBuild.result = "FAILURE"

        notifyBuild('FAILURE')

        throw e
    } finally {

      stage('Clean') {

      }
    }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus = buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED' || buildStatus == 'DEPLOYMENT' ) {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS' || buildStatus == 'DEPLOYMENT_SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notification
  hipchatSend (color: color, notify: true, message: summary)
}
